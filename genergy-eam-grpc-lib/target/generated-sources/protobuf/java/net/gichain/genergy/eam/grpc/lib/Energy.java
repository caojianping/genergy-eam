// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Energy.proto

package net.gichain.genergy.eam.grpc.lib;

public final class Energy {
  private Energy() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_net_gichain_genergy_eam_grpc_lib_EnergyTrendRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_net_gichain_genergy_eam_grpc_lib_EnergyTrendRequest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014Energy.proto\022 net.gichain.genergy.eam." +
      "grpc.lib\032\rRequest.proto\032\014Result.proto\"3\n" +
      "\022EnergyTrendRequest\022\017\n\007assetId\030\001 \001(\003\022\014\n\004" +
      "type\030\002 \001(\0052\367\001\n\rEnergyService\022r\n\022getYeste" +
      "rdayEnergy\0220.net.gichain.genergy.eam.grp" +
      "c.lib.AssetIdRequest\032(.net.gichain.gener" +
      "gy.eam.grpc.lib.Result\"\000\022r\n\016getEnergyTre" +
      "nd\0224.net.gichain.genergy.eam.grpc.lib.En" +
      "ergyTrendRequest\032(.net.gichain.genergy.e" +
      "am.grpc.lib.Result\"\000B\002P\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          net.gichain.genergy.eam.grpc.lib.Request.getDescriptor(),
          net.gichain.genergy.eam.grpc.lib.ResultOuterClass.getDescriptor(),
        }, assigner);
    internal_static_net_gichain_genergy_eam_grpc_lib_EnergyTrendRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_net_gichain_genergy_eam_grpc_lib_EnergyTrendRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_net_gichain_genergy_eam_grpc_lib_EnergyTrendRequest_descriptor,
        new java.lang.String[] { "AssetId", "Type", });
    net.gichain.genergy.eam.grpc.lib.Request.getDescriptor();
    net.gichain.genergy.eam.grpc.lib.ResultOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
